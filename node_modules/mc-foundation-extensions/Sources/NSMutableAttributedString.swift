//
//  NSMutableAttributedString.swift
//  mcFoundation
//
//  Created by Vlad Gorlov on 24/02/2017.
//  Copyright Â© 2017 WaveLabs. All rights reserved.
//

import Foundation
#if os(iOS) || os(tvOS) || os(watchOS)
import UIKit
#elseif os(OSX)
import AppKit
#endif

extension NSMutableAttributedString {

   #if os(iOS) || os(tvOS) || os(watchOS)
   public typealias Font = UIFont
   public typealias Color = UIColor
   #elseif os(OSX)
   public typealias Font = NSFont
   public typealias Color = NSColor
   #endif

   public func replace(with: String) {
      let range = string.startIndex ..< string.endIndex
      replaceCharacters(in: NSRange(range, in: string), with: with)
   }

   public func removeAttributes(range: Range<String.Index>? = nil) {
      setAttributes([:], range: range)
   }

   // MARK: - Set

   public func setAttributes(_ attributes: [NSAttributedString.Key: Any], range: Range<String.Index>? = nil) {
      let wholeStringRange = string.startIndex ..< string.endIndex
      let range = range ?? wholeStringRange
      if !range.overlaps(wholeStringRange) {
         return
      }
      let nsRange = NSRange(range, in: string)
      setAttributes(attributes, range: nsRange)
   }

   // MARK: - Add

   public func addAttributes(_ attributes: [NSAttributedString.Key: Any], range: Range<String.Index>? = nil) {
      let wholeStringRange = string.startIndex ..< string.endIndex
      let range = range ?? wholeStringRange
      if !range.overlaps(wholeStringRange) {
         return
      }
      let nsRange = NSRange(range, in: string)
      addAttributes(attributes, range: nsRange)
   }

   public func addAttribute(_ name: NSAttributedString.Key, value: Any, range: Range<String.Index>? = nil) {
      let wholeStringRange = string.startIndex ..< string.endIndex
      let range = range ?? wholeStringRange
      let nsRange = NSRange(range, in: string)
      if !range.overlaps(wholeStringRange) {
         return
      }
      addAttribute(name, value: value, range: nsRange)
   }

   public func addParagraphStyle(paragraphStyle: NSParagraphStyle, range: Range<String.Index>? = nil) {
      addAttribute(.paragraphStyle, value: paragraphStyle, range: range)
   }

   public func addFont(font: Font, range: Range<String.Index>? = nil) {
      addAttribute(.font, value: font, range: range)
   }

   public func addForegroundColor(_ color: Color, range: Range<String.Index>? = nil) {
      addAttribute(.foregroundColor, value: color, range: range)
   }

   public func addBackgroundColor(_ color: Color, range: Range<String.Index>? = nil) {
      addAttribute(.backgroundColor, value: color, range: range)
   }
}
