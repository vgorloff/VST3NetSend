
desc "Build codesigned release for GitHub."
lane :release do
   XcodeBuilder.new(XCodeProjectFilePath).archive(XCodeProjectSchema, "Release", true)
   apps = Dir["#{ENV['PWD']}/**/*.xcarchive/**/*.vst3"].select { |f| File.directory?(f) }
   apps.each { |app| zip(path: app, output_path: "#{app}.zip") }
   apps.each { |app| XcodeBuilder.validateBinary(app) }
end

desc "Deploy release to GitHub."
lane :deploy do
   assets = Dir["#{ENV['PWD']}/**/*.xcarchive/**/*.vst3.zip"]
   releaseName = File.read("#{ENV['PWD']}/fastlane/ReleaseName.txt").strip
   releaseDescription = File.read("#{ENV['PWD']}/fastlane/ReleaseNotes.txt").strip
   github_release = set_github_release(
     repository_name: "vgorloff/VST3NetSend", api_token: ENV['AWL_GITHUB_TOKEN'], name: releaseName, tag_name: last_git_tag,
     description: releaseDescription, commitish: "master", upload_assets: assets
   )
end

desc "Autocorrect source code."
lane :autocorrect do
   sh "swiftformat "\
   "--allman false --binarygrouping none --commas inline --comments indent --decimalgrouping none --empty void "\
   "--exponentcase lowercase --header ignore --hexgrouping none --hexliteralcase uppercase --ifdef noindent --indent 3 --insertlines enabled "\
   "--linebreaks lf --octalgrouping none --patternlet inline --ranges spaced --removelines true --semicolons inline --self remove "\
   "--stripunusedargs unnamed-only --trimwhitespace always --wraparguments disabled --wrapelements disabled "\
   "\"#{ENV['PWD']}\""
   sh "swiftlint autocorrect --path #{ENV['PWD']}"
   ImportsOrganizer.new().process(ENV['PWD'])
end

desc "Verify source code."
lane :verify do
   import "#{ENV['PWD']}/Scripts/BuildPhase-PreBuild.rb"
   verifySources('Verify')
end

desc "Unsync source code."
lane :unsync do
   srcUnsync(XCodeProjectFilePath)
end

desc "Sync source code."
lane :sync do
   srcSync(XCodeProjectFilePath)
end
