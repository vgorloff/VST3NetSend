import CoreGraphics
#if os(iOS) || os(tvOS) || os(watchOS)
import UIKit
#elseif os(OSX)
import AppKit
#endif

extension CGSize {

   public init(squareSide: CGFloat) {
      self.init(width: squareSide, height: squareSide)
   }

   public init(width: CGFloat) {
      self.init(width: width, height: 0)
   }

   public init(height: CGFloat) {
      self.init(width: 0, height: height)
   }

   #if !os(watchOS)
   public init(intrinsicWidth: CGFloat) {
      #if os(iOS) || os(tvOS)
      self.init(width: intrinsicWidth, height: UIView.noIntrinsicMetric)
      #elseif os(OSX)
      self.init(width: intrinsicWidth, height: NSView.noIntrinsicMetric)
      #endif
   }

   public init(intrinsicHeight: CGFloat) {
      #if os(iOS) || os(tvOS)
      self.init(width: UIView.noIntrinsicMetric, height: intrinsicHeight)
      #elseif os(OSX)
      self.init(width: NSView.noIntrinsicMetric, height: intrinsicHeight)
      #endif
   }
   #endif

   public func insetBy(dx: CGFloat, dy: CGFloat) -> CGSize {
      return CGSize(width: width - dx, height: height - dy)
   }

   public var isZeroSize: Bool {
      return width <= CGFloat.leastNormalMagnitude && height <= CGFloat.leastNormalMagnitude
   }
}
